{"version":3,"sources":["components/Category.js","components/Subcategory.js","data/categories.js","components/Dashboard.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Category","_ref","category","onClick","React","createElement","className","name","Subcategory","subcategory","categories","Array","from","length","_","i","id","concat","subcategories","j","Dashboard","selectedCategory","setSelectedCategory","useState","map","key","categoriesData","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"oPASeA,MANEC,IAAA,IAAC,SAAEC,EAAQ,QAAEC,GAASF,EAAA,OACrCG,IAAAC,cAAA,OAAKC,UAAU,WAAWH,QAASA,IAAMA,EAAQD,IAC/CE,IAAAC,cAAA,SAAIH,EAASK,QCIFC,MANKP,IAAA,IAAC,YAAEQ,GAAaR,EAAA,OAClCG,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,SAAII,EAAYF,QCKLG,MATIC,MAAMC,KAAK,CAAEC,OAAQ,IAAM,CAACC,EAAGC,KAAC,CACjDC,GAAID,EAAI,EACRR,KAAK,YAADU,OAAcF,EAAI,GACtBG,cAAeP,MAAMC,KAAK,CAAEC,OAAQ,IAAM,CAACC,EAAGK,KAAC,CAC7CH,GAAIG,EAAI,EACRZ,KAAK,eAADU,OAAiBE,EAAI,S,KC2BdC,MA1BGA,KAChB,MAAOC,EAAkBC,GAAuBC,mBAAS,MAEzD,OACEnB,IAAAC,cAAA,OAAKC,UAAU,aACZe,EACCjB,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAKgB,EAAiBd,MACtBH,IAAAC,cAAA,UAAQF,QAASA,IAAMmB,EAAoB,OAAO,QAClDlB,IAAAC,cAAA,OAAKC,UAAU,sBACZe,EAAiBH,cAAcM,IAAKf,GACnCL,IAAAC,cAACG,EAAW,CAACiB,IAAKhB,EAAYO,GAAIP,YAAaA,OAKrDL,IAAAC,cAAA,OAAKC,UAAU,mBACZoB,EAAeF,IAAKtB,GACnBE,IAAAC,cAACL,EAAQ,CAACyB,IAAKvB,EAASc,GAAId,SAAUA,EAAUC,QAASmB,Q,MCTtDK,MAXf,WACE,OACEvB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,UAAI,YAEND,IAAAC,cAACe,EAAS,QCThB,MAAMQ,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UACe,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2DA8BN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAMC,IACLA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAC1BC,QAAQC,IACN,+GAIEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAGlBO,QAAQC,IAAI,sCAERb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAOC,IACNL,QAAQK,MAAM,4CAA6CA,KCxDlDC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,KAAKvC,IAAkD,IAAjD,OAAEwD,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5D,EACpEwD,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCAdO,IAASC,OACP3D,IAAAC,cAACD,IAAM4D,WAAU,KACf5D,IAAAC,cAACsB,EAAG,OAENsC,SAASC,eAAe,SFDnB,SAAkB9B,GACvB,GAA6C,kBAAmBC,UAAW,CAEzE,GADkB,IAAI8B,IAAIC,OAAwBtC,OAAOC,SAASsC,MACpDC,SAAWxC,OAAOC,SAASuC,OACvC,OAGFxC,OAAOyC,iBAAiB,OAAQ,KAC9B,MAAMpC,EAAK,GAAAlB,OAAMmD,OAAsB,sBAEnCxC,IAoDV,SAAiCO,EAAOC,GACtCoC,MAAMrC,EAAO,CACXsC,QAAS,CAAE,iBAAkB,YAE5BjC,KAAMkC,IACL,MAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAE5CzC,UAAUC,cAAcyC,MAAMvC,KAAMC,IAClCA,EAAauC,aAAaxC,KAAK,KAC7BV,OAAOC,SAASkD,aAIpB/C,EAAgBC,EAAOC,KAG1BgB,MAAM,KACLJ,QAAQC,IACN,mEAxEAiC,CAAwB/C,EAAOC,GAE/BC,UAAUC,cAAcyC,MAAMvC,KAAK,KACjCQ,QAAQC,IACN,8GAKJf,EAAgBC,EAAOC,MEhB/B+C,GACA7B,M","file":"static/js/main.6bf041d3.chunk.js","sourcesContent":["// src/components/Category.js\nimport React from 'react';\n\nconst Category = ({ category, onClick }) => (\n  <div className=\"category\" onClick={() => onClick(category)}>\n    <p>{category.name}</p>\n  </div>\n);\n\nexport default Category;\n","// src/components/Subcategory.js\nimport React from 'react';\n\nconst Subcategory = ({ subcategory }) => (\n  <div className=\"subcategory\">\n    <p>{subcategory.name}</p>\n  </div>\n);\n\nexport default Subcategory;\n","// src/data/categories.js\nconst categories = Array.from({ length: 30 }, (_, i) => ({\n  id: i + 1,\n  name: `Category ${i + 1}`,\n  subcategories: Array.from({ length: 20 }, (_, j) => ({\n    id: j + 1,\n    name: `Subcategory ${j + 1}`\n  }))\n}));\n\nexport default categories;\n","// src/components/Dashboard.js\nimport React, { useState } from 'react';\nimport Category from './Category';\nimport Subcategory from './Subcategory';\nimport categoriesData from '../data/categories';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  return (\n    <div className=\"dashboard\">\n      {selectedCategory ? (\n        <div className=\"subcategories\">\n          <h2>{selectedCategory.name}</h2>\n          <button onClick={() => setSelectedCategory(null)}>Back</button>\n          <div className=\"subcategories-grid\">\n            {selectedCategory.subcategories.map((subcategory) => (\n              <Subcategory key={subcategory.id} subcategory={subcategory} />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"categories-grid\">\n          {categoriesData.map((category) => (\n            <Category key={category.id} category={category} onClick={setSelectedCategory} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","// src/App.js\nimport React from 'react';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>AAC App</h1>\n      </header>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// src/serviceWorkerRegistration.js\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\nreportWebVitals();\n"],"sourceRoot":""}